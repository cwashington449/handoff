spring:
  application:
    name: handoff-backend
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes default TTL
  session:
    redis:
      namespace: handoff:sessions
    timeout: 86400s # 1 day
  config:
    activate:
      on-profile: local
  datasource:
    url: ${DB_URL:jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:handoff}}
    username: ${DB_USERNAME:handoff}
    password: ${DB_PASSWORD:handoff}
    hikari:
      maximum-pool-size: ${DB_POOL_MAX:10}
      minimum-idle: ${DB_POOL_MIN:2}
      connection-timeout: ${DB_CONN_TIMEOUT_MS:30000}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  flyway:
    enabled: true
  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your_username}
    password: ${MAIL_PASSWORD:your_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
      from: ${MAIL_FROM:no-reply@handoff-mvp.com}

# JWT defaults - Need vault or another secure way to manage secrets
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

# CORS defaults
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173}
  allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
  allowed-headers: "*"

management:
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  level:
    com.handoff: INFO
    org.springframework.security: INFO

server:
  port: 8080

springdoc:
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

---
# Nonprod profile: PostgreSQL with Flyway
spring:
  config:
    activate:
      on-profile: nonprod
  datasource:
    url: ${DB_URL:jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:handoff}}
    username: ${DB_USERNAME:handoff}
    password: ${DB_PASSWORD:handoff}
    hikari:
      maximum-pool-size: ${DB_POOL_MAX:10}
      minimum-idle: ${DB_POOL_MIN:2}
      connection-timeout: ${DB_CONN_TIMEOUT_MS:30000}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  flyway:
    enabled: true
  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your_username}
    password: ${MAIL_PASSWORD:your_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
      from: ${MAIL_FROM:no-reply@handoff-mvp.com}

---
# Prod profile: PostgreSQL with Flyway
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_MAX:20}
      minimum-idle: ${DB_POOL_MIN:4}
      connection-timeout: ${DB_CONN_TIMEOUT_MS:30000}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  flyway:
    enabled: true
  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your_username}
    password: ${MAIL_PASSWORD:your_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
      from: ${MAIL_FROM:no-reply@handoff-mvp.com}

logging:
  level:
    com.handoff: INFO
    org.springframework.security: WARN
    org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: ERROR